#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNH")]
	public partial class QLNHDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIENLAI(BIENLAI instance);
    partial void UpdateBIENLAI(BIENLAI instance);
    partial void DeleteBIENLAI(BIENLAI instance);
    partial void InsertCHINHANH(CHINHANH instance);
    partial void UpdateCHINHANH(CHINHANH instance);
    partial void DeleteCHINHANH(CHINHANH instance);
    partial void InsertHOTRO(HOTRO instance);
    partial void UpdateHOTRO(HOTRO instance);
    partial void DeleteHOTRO(HOTRO instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAITAIKHOAN(LOAITAIKHOAN instance);
    partial void UpdateLOAITAIKHOAN(LOAITAIKHOAN instance);
    partial void DeleteLOAITAIKHOAN(LOAITAIKHOAN instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTIENTE(TIENTE instance);
    partial void UpdateTIENTE(TIENTE instance);
    partial void DeleteTIENTE(TIENTE instance);
    #endregion
		
		public QLNHDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLNHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNHDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNHDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNHDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNHDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIENLAI> BIENLAIs
		{
			get
			{
				return this.GetTable<BIENLAI>();
			}
		}
		
		public System.Data.Linq.Table<CHINHANH> CHINHANHs
		{
			get
			{
				return this.GetTable<CHINHANH>();
			}
		}
		
		public System.Data.Linq.Table<HOTRO> HOTROs
		{
			get
			{
				return this.GetTable<HOTRO>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAITAIKHOAN> LOAITAIKHOANs
		{
			get
			{
				return this.GetTable<LOAITAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TIENTE> TIENTEs
		{
			get
			{
				return this.GetTable<TIENTE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIENLAI")]
	public partial class BIENLAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABL;
		
		private string _LOAIBL;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _SOTIEN;
		
		private string _MANV;
		
		private string _MaKH;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABLChanging(string value);
    partial void OnMABLChanged();
    partial void OnLOAIBLChanging(string value);
    partial void OnLOAIBLChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnSOTIENChanging(System.Nullable<double> value);
    partial void OnSOTIENChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    #endregion
		
		public BIENLAI()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABL
		{
			get
			{
				return this._MABL;
			}
			set
			{
				if ((this._MABL != value))
				{
					this.OnMABLChanging(value);
					this.SendPropertyChanging();
					this._MABL = value;
					this.SendPropertyChanged("MABL");
					this.OnMABLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIBL", DbType="NVarChar(30)")]
		public string LOAIBL
		{
			get
			{
				return this._LOAIBL;
			}
			set
			{
				if ((this._LOAIBL != value))
				{
					this.OnLOAIBLChanging(value);
					this.SendPropertyChanging();
					this._LOAIBL = value;
					this.SendPropertyChanged("LOAIBL");
					this.OnLOAIBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEN", DbType="Float")]
		public System.Nullable<double> SOTIEN
		{
			get
			{
				return this._SOTIEN;
			}
			set
			{
				if ((this._SOTIEN != value))
				{
					this.OnSOTIENChanging(value);
					this.SendPropertyChanging();
					this._SOTIEN = value;
					this.SendPropertyChanged("SOTIEN");
					this.OnSOTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BIENLAI", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.BIENLAIs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.BIENLAIs.Add(this);
						this._MaKH = value.MAKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BIENLAI", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BIENLAIs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BIENLAIs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHINHANH")]
	public partial class CHINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACN;
		
		private string _TENCHINHANH;
		
		private string _DIACHI;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACNChanging(string value);
    partial void OnMACNChanged();
    partial void OnTENCHINHANHChanging(string value);
    partial void OnTENCHINHANHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public CHINHANH()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACN
		{
			get
			{
				return this._MACN;
			}
			set
			{
				if ((this._MACN != value))
				{
					this.OnMACNChanging(value);
					this.SendPropertyChanging();
					this._MACN = value;
					this.SendPropertyChanged("MACN");
					this.OnMACNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHINHANH", DbType="NVarChar(50)")]
		public string TENCHINHANH
		{
			get
			{
				return this._TENCHINHANH;
			}
			set
			{
				if ((this._TENCHINHANH != value))
				{
					this.OnTENCHINHANHChanging(value);
					this.SendPropertyChanging();
					this._TENCHINHANH = value;
					this.SendPropertyChanged("TENCHINHANH");
					this.OnTENCHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACN", OtherKey="MACN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTRO")]
	public partial class HOTRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _DVHT;
		
		private string _MANV;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnDVHTChanging(string value);
    partial void OnDVHTChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public HOTRO()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVHT", DbType="NVarChar(50)")]
		public string DVHT
		{
			get
			{
				return this._DVHT;
			}
			set
			{
				if ((this._DVHT != value))
				{
					this.OnDVHTChanging(value);
					this.SendPropertyChanging();
					this._DVHT = value;
					this.SendPropertyChanged("DVHT");
					this.OnDVHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOTRO", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOTROs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOTROs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOTRO", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOTROs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOTROs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private System.Nullable<int> _SDT;
		
		private string _GIOITINH;
		
		private string _DCHI;
		
		private System.Nullable<System.DateTime> _NSINH;
		
		private EntitySet<BIENLAI> _BIENLAIs;
		
		private EntitySet<HOTRO> _HOTROs;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnNSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNSINHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._BIENLAIs = new EntitySet<BIENLAI>(new Action<BIENLAI>(this.attach_BIENLAIs), new Action<BIENLAI>(this.detach_BIENLAIs));
			this._HOTROs = new EntitySet<HOTRO>(new Action<HOTRO>(this.attach_HOTROs), new Action<HOTRO>(this.detach_HOTROs));
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(30)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NSINH
		{
			get
			{
				return this._NSINH;
			}
			set
			{
				if ((this._NSINH != value))
				{
					this.OnNSINHChanging(value);
					this.SendPropertyChanging();
					this._NSINH = value;
					this.SendPropertyChanged("NSINH");
					this.OnNSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BIENLAI", Storage="_BIENLAIs", ThisKey="MAKH", OtherKey="MaKH")]
		public EntitySet<BIENLAI> BIENLAIs
		{
			get
			{
				return this._BIENLAIs;
			}
			set
			{
				this._BIENLAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOTRO", Storage="_HOTROs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOTRO> HOTROs
		{
			get
			{
				return this._HOTROs;
			}
			set
			{
				this._HOTROs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITAIKHOAN")]
	public partial class LOAITAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENNH;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENNHChanging(string value);
    partial void OnTENNHChanged();
    #endregion
		
		public LOAITAIKHOAN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNH", DbType="NVarChar(30)")]
		public string TENNH
		{
			get
			{
				return this._TENNH;
			}
			set
			{
				if ((this._TENNH != value))
				{
					this.OnTENNHChanging(value);
					this.SendPropertyChanging();
					this._TENNH = value;
					this.SendPropertyChanged("TENNH");
					this.OnTENNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITAIKHOAN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MALOAI", OtherKey="LOAITK")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITAIKHOAN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _CHUC;
		
		private System.Nullable<double> _LUONG;
		
		private string _DIACHI;
		
		private System.Nullable<int> _SDT;
		
		private System.Nullable<int> _MAPB;
		
		private string _MACN;
		
		private EntitySet<BIENLAI> _BIENLAIs;
		
		private EntitySet<HOTRO> _HOTROs;
		
		private EntitySet<PHONGBAN> _PHONGBANs;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
		private EntityRef<CHINHANH> _CHINHANH;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnCHUCChanging(string value);
    partial void OnCHUCChanged();
    partial void OnLUONGChanging(System.Nullable<double> value);
    partial void OnLUONGChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnMAPBChanging(System.Nullable<int> value);
    partial void OnMAPBChanged();
    partial void OnMACNChanging(string value);
    partial void OnMACNChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._BIENLAIs = new EntitySet<BIENLAI>(new Action<BIENLAI>(this.attach_BIENLAIs), new Action<BIENLAI>(this.detach_BIENLAIs));
			this._HOTROs = new EntitySet<HOTRO>(new Action<HOTRO>(this.attach_HOTROs), new Action<HOTRO>(this.detach_HOTROs));
			this._PHONGBANs = new EntitySet<PHONGBAN>(new Action<PHONGBAN>(this.attach_PHONGBANs), new Action<PHONGBAN>(this.detach_PHONGBANs));
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			this._CHINHANH = default(EntityRef<CHINHANH>);
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(30)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUC", DbType="NVarChar(50)")]
		public string CHUC
		{
			get
			{
				return this._CHUC;
			}
			set
			{
				if ((this._CHUC != value))
				{
					this.OnCHUCChanging(value);
					this.SendPropertyChanging();
					this._CHUC = value;
					this.SendPropertyChanged("CHUC");
					this.OnCHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONG", DbType="Float")]
		public System.Nullable<double> LUONG
		{
			get
			{
				return this._LUONG;
			}
			set
			{
				if ((this._LUONG != value))
				{
					this.OnLUONGChanging(value);
					this.SendPropertyChanging();
					this._LUONG = value;
					this.SendPropertyChanged("LUONG");
					this.OnLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPB", DbType="Int")]
		public System.Nullable<int> MAPB
		{
			get
			{
				return this._MAPB;
			}
			set
			{
				if ((this._MAPB != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPBChanging(value);
					this.SendPropertyChanging();
					this._MAPB = value;
					this.SendPropertyChanged("MAPB");
					this.OnMAPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACN", DbType="Char(10)")]
		public string MACN
		{
			get
			{
				return this._MACN;
			}
			set
			{
				if ((this._MACN != value))
				{
					if (this._CHINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACNChanging(value);
					this.SendPropertyChanging();
					this._MACN = value;
					this.SendPropertyChanged("MACN");
					this.OnMACNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BIENLAI", Storage="_BIENLAIs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<BIENLAI> BIENLAIs
		{
			get
			{
				return this._BIENLAIs;
			}
			set
			{
				this._BIENLAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOTRO", Storage="_HOTROs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOTRO> HOTROs
		{
			get
			{
				return this._HOTROs;
			}
			set
			{
				this._HOTROs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHONGBAN", Storage="_PHONGBANs", ThisKey="MANV", OtherKey="TRPHONG")]
		public EntitySet<PHONGBAN> PHONGBANs
		{
			get
			{
				return this._PHONGBANs;
			}
			set
			{
				this._PHONGBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_NHANVIEN", Storage="_CHINHANH", ThisKey="MACN", OtherKey="MACN", IsForeignKey=true)]
		public CHINHANH CHINHANH
		{
			get
			{
				return this._CHINHANH.Entity;
			}
			set
			{
				CHINHANH previousValue = this._CHINHANH.Entity;
				if (((previousValue != value) 
							|| (this._CHINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHINHANH.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHINHANH.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MACN = value.MACN;
					}
					else
					{
						this._MACN = default(string);
					}
					this.SendPropertyChanged("CHINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_PHONGBAN", ThisKey="MAPB", OtherKey="MAPB", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MAPB = value.MAPB;
					}
					else
					{
						this._MAPB = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHONGBANs(PHONGBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHONGBANs(PHONGBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPB;
		
		private string _TENPB;
		
		private string _TRPHONG;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPBChanging(int value);
    partial void OnMAPBChanged();
    partial void OnTENPBChanging(string value);
    partial void OnTENPBChanged();
    partial void OnTRPHONGChanging(string value);
    partial void OnTRPHONGChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPB
		{
			get
			{
				return this._MAPB;
			}
			set
			{
				if ((this._MAPB != value))
				{
					this.OnMAPBChanging(value);
					this.SendPropertyChanging();
					this._MAPB = value;
					this.SendPropertyChanged("MAPB");
					this.OnMAPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPB", DbType="NVarChar(15)")]
		public string TENPB
		{
			get
			{
				return this._TENPB;
			}
			set
			{
				if ((this._TENPB != value))
				{
					this.OnTENPBChanging(value);
					this.SendPropertyChanging();
					this._TENPB = value;
					this.SendPropertyChanged("TENPB");
					this.OnTENPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRPHONG", DbType="Char(10)")]
		public string TRPHONG
		{
			get
			{
				return this._TRPHONG;
			}
			set
			{
				if ((this._TRPHONG != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRPHONGChanging(value);
					this.SendPropertyChanging();
					this._TRPHONG = value;
					this.SendPropertyChanged("TRPHONG");
					this.OnTRPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAPB", OtherKey="MAPB")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHONGBAN", Storage="_NHANVIEN", ThisKey="TRPHONG", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHONGBANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHONGBANs.Add(this);
						this._TRPHONG = value.MANV;
					}
					else
					{
						this._TRPHONG = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATK;
		
		private System.Nullable<double> _SODU;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private string _MAKH;
		
		private string _LOAITK;
		
		private string _LOAITIEN;
		
		private string _MANV;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LOAITAIKHOAN> _LOAITAIKHOAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<TIENTE> _TIENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATKChanging(string value);
    partial void OnMATKChanged();
    partial void OnSODUChanging(System.Nullable<double> value);
    partial void OnSODUChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnLOAITKChanging(string value);
    partial void OnLOAITKChanged();
    partial void OnLOAITIENChanging(string value);
    partial void OnLOAITIENChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LOAITAIKHOAN = default(EntityRef<LOAITAIKHOAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._TIENTE = default(EntityRef<TIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATK", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATK
		{
			get
			{
				return this._MATK;
			}
			set
			{
				if ((this._MATK != value))
				{
					this.OnMATKChanging(value);
					this.SendPropertyChanging();
					this._MATK = value;
					this.SendPropertyChanged("MATK");
					this.OnMATKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODU", DbType="Float")]
		public System.Nullable<double> SODU
		{
			get
			{
				return this._SODU;
			}
			set
			{
				if ((this._SODU != value))
				{
					this.OnSODUChanging(value);
					this.SendPropertyChanging();
					this._SODU = value;
					this.SendPropertyChanged("SODU");
					this.OnSODUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAITK", DbType="Char(10)")]
		public string LOAITK
		{
			get
			{
				return this._LOAITK;
			}
			set
			{
				if ((this._LOAITK != value))
				{
					if (this._LOAITAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAITKChanging(value);
					this.SendPropertyChanging();
					this._LOAITK = value;
					this.SendPropertyChanged("LOAITK");
					this.OnLOAITKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAITIEN", DbType="Char(10)")]
		public string LOAITIEN
		{
			get
			{
				return this._LOAITIEN;
			}
			set
			{
				if ((this._LOAITIEN != value))
				{
					if (this._TIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAITIENChanging(value);
					this.SendPropertyChanging();
					this._LOAITIEN = value;
					this.SendPropertyChanged("LOAITIEN");
					this.OnLOAITIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_TAIKHOAN", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITAIKHOAN_TAIKHOAN", Storage="_LOAITAIKHOAN", ThisKey="LOAITK", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAITAIKHOAN LOAITAIKHOAN
		{
			get
			{
				return this._LOAITAIKHOAN.Entity;
			}
			set
			{
				LOAITAIKHOAN previousValue = this._LOAITAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._LOAITAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITAIKHOAN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._LOAITAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._LOAITK = value.MALOAI;
					}
					else
					{
						this._LOAITK = default(string);
					}
					this.SendPropertyChanged("LOAITAIKHOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIENTE_TAIKHOAN", Storage="_TIENTE", ThisKey="LOAITIEN", OtherKey="MATT", IsForeignKey=true)]
		public TIENTE TIENTE
		{
			get
			{
				return this._TIENTE.Entity;
			}
			set
			{
				TIENTE previousValue = this._TIENTE.Entity;
				if (((previousValue != value) 
							|| (this._TIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIENTE.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._TIENTE.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._LOAITIEN = value.MATT;
					}
					else
					{
						this._LOAITIEN = default(string);
					}
					this.SendPropertyChanged("TIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIENTE")]
	public partial class TIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATT;
		
		private string _TENTT;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATTChanging(string value);
    partial void OnMATTChanged();
    partial void OnTENTTChanging(string value);
    partial void OnTENTTChanged();
    #endregion
		
		public TIENTE()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATT
		{
			get
			{
				return this._MATT;
			}
			set
			{
				if ((this._MATT != value))
				{
					this.OnMATTChanging(value);
					this.SendPropertyChanging();
					this._MATT = value;
					this.SendPropertyChanged("MATT");
					this.OnMATTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTT", DbType="NVarChar(30)")]
		public string TENTT
		{
			get
			{
				return this._TENTT;
			}
			set
			{
				if ((this._TENTT != value))
				{
					this.OnTENTTChanging(value);
					this.SendPropertyChanging();
					this._TENTT = value;
					this.SendPropertyChanged("TENTT");
					this.OnTENTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIENTE_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MATT", OtherKey="LOAITIEN")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TIENTE = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TIENTE = null;
		}
	}
}
#pragma warning restore 1591
